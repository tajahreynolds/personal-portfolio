---
import BaseLayout from "../../layouts/BaseLayout.astro";

import type {
  InferGetStaticParamsType,
  InferGetStaticPropsType,
  MarkdownInstance,
} from "astro";

export async function getStaticPaths() {
  const allPosts: MarkdownInstance<{
    title: string;
    tags: string[];
    author: string;
    layout: string;
    description: string;
    image: { url: string; alt: string };
    pubDate: string;
  }>[] = await Astro.glob("../posts/*.md");

  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
  ];
  
  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.frontmatter.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { tag } = Astro.params as Params;
const { posts } = Astro.props;
---

<BaseLayout pageTitle={`${tag} posts`}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {
      posts.map((post) => (
        <li>
          <a href={post.url}>{post.frontmatter.title}</a>
        </li>
      ))
    }
  </ul>
</BaseLayout>
